@{ 
    List<NodeValue> NodeValues = ViewBag.NodeValues;
    var nodeDict = NodeValues.GroupBy(e => e.NodeID).ToDictionary(e => e.Key, e => e.Select(k=>k.Node).FirstOrDefault());
    var nodeIDs = nodeDict.Select(e => e.Key).ToArray();
    var areas = NodeValues.GroupBy(e => e.AreaID).OrderBy(e => e.Key).ToDictionary(e => e.Key, e => e.Select(k => k.Area).FirstOrDefault());
}
<div class="row">
    <div class="col-md-6">
        <canvas id="All"></canvas>
    </div>
</div>
<script>
    $(function(){
        var ctxall=document.getElementById("All");
        var myChartall=new Chart(ctxall,{
            type:'line',
            data:{
                labels:@(Html.Raw(areas.Select(e=>e.Value.Name).ToJson())),
                datasets:[
                @for(var i=0;i<nodeIDs.Count();i++)
                {
                    var list = NodeValues.Where(e => e.NodeID == nodeIDs[i]).ToList();
                    var data = new List<int>();
                    foreach(var entry in areas)
                    {
                        data.Add(list.Where(e => e.AreaID == entry.Key).Count());
                    }
                    if (i > 0)
                    {
                         @:, 
                    }

                    <text>
                    {
                        label:"@(nodeDict[nodeIDs[i]].Name)",
                        data:@(Html.Raw(data.ToJson())),
                        borderColor:getChartColor(@(nodeIDs[i])),
                        fill:false,
                        lineTension:0.1
                    }
                    </text>
                }
                ]
            },
            options:{
                scales:{
                    height:200
                }
            }
        });
    });
</script>

@foreach(var nodeid in nodeIDs)
{
    var dict = NodeValues.Where(e => e.NodeID == nodeid).GroupBy(e => e.Area).ToDictionary(e => e.Key??new Area(), e => e.ToList());
    var labels = dict.Select(e => e.Key.Name).ToArray();
    var data = dict.Select(e => e.Value.Count).ToArray();
    <div class="col-md-4">
        <h4>@(nodeDict[nodeid]==null?"":nodeDict[nodeid].Name)</h4>
        <div class="row">
            <canvas id="chart-@(nodeid)"></canvas>
        </div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>区域</th>
                    <th>填报情况</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entry in dict)
                {
                    <tr>
                        <td>@(entry.Key.Name)</td>
                        <td>@(entry.Value.Count)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <script>
        $(function () {
            var labels=@Html.Raw(labels.ToJson())||[];
            var data=@Html.Raw(data.ToJson())||[];
            var len=labels.length-data.length;
            for(var i=0;i<len;i++){
                data.push(0);
            }
            var ctx=document.getElementById("chart-@(nodeid)");
            var myChart=new Chart(ctx,{
                type:'doughnut',
                data:{
                    labels:labels,
                    datasets:[{
                        data:data,
                        backgroundColor:getChartColors(data.length)
                    }]
                }
            });
        });
    </script>
}
