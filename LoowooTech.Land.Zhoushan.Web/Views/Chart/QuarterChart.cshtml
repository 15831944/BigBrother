@{
    NodeValueParameter parameter = ViewBag.Parameter;
    List<NodeValue> values = ViewBag.Values;
    Node node = ViewBag.Node;
    NodeValueType valueType = ViewBag.ValueType;
    var currentYear = DateTime.Now.Year;
    var currentQuarter = (Quarter)DateTime.Now.GetQuarter();

    var data = new List<double>();
    var labels = new List<string>();
    foreach (var year in parameter.Years.OrderBy(e => e))
    {
        foreach (var qval in Enum.GetValues(typeof(Quarter)))
        {
            var quarter = (Quarter)qval;
            if (year == currentYear && quarter > currentQuarter)
            {
                break;
            }

            labels.Add(year + "年" + quarter.GetDescription());
            var val = values.FirstOrDefault(e => e.Year == year && e.Quarter == quarter);
            data.Add(val == null ? 0 : val.Value);
        }
    }

}
<div class="col-lg-12">
    <hr />
    <h4>历史数据</h4>
    @*<div class="col-lg-5">
        <table class="table">
            <tr>
                <th>季度</th>
                <td>@(valueType.Name)(@(valueType.Unit))</td>
            </tr>
            @for(var i=0;i<labels.Count;i++)
            {
                var label = labels[i];
                var val = data[i];

            <tr>
                <td>@(label)</td>
                <td>@(val)</td>
            </tr>
            }
        </table>
    </div>*@
    <div  class="col-lg-5">
        <canvas id="chart-quarter"></canvas>
    </div>
    <script>
        $(function(){
            var labels = @Html.Raw(labels.ToJson()) || [];
            var data = @Html.Raw(data.ToJson()) || [];
            var ctx = document.getElementById("chart-quarter");
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets:[{
                        label: "@(node.Name)",
                        data:data,
                        fill: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,0.4)",
                        borderColor: "rgba(75,192,192,1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: "rgba(75,192,192,1)",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10
                    }]
                },
                options:{scales: {
                    height:200
                }
                }
            });
        });
    </script>
</div>
