@{
    Node node = ViewBag.Node;
    if (node == null)
    {
        return;
    }

    List<Area> areas = ViewBag.Areas;

    List<NodeValue> nodeValues = ViewBag.AreaValues;
    if (nodeValues.Count == 0)
    {
        return;
    }
    List<NodeValueType> valueTypes = ViewBag.ValueTypes;
    NodeValueParameter parameter = ViewBag.Parameter;
    var areaLabels = areas.OrderBy(e => e.ID).Select(e => e.Name).ToArray();
    var types = nodeValues.GroupBy(e => e.TypeID).Select(g => g.Key).ToArray();

}
<div class="col-md-12">
    <hr />
    <h4>各地区数据</h4>
    <div class="col-md-4">
        <canvas id="chart-area"></canvas>
    </div>
    <div class="col-md-5">
        <div class="grid">
            <div class="grid-header row">
                <div class="col-md-6">地区名称</div>
                <div class="col-md-3">值</div>
                <div class="col-md-3">@(parameter.RateType.Value.GetDescription()) %</div>
            </div>
            @foreach (var area in areas)
            {
                Html.RenderPartial("_AreaChartItem", area);
            }
        </div>
    </div>
</div>
<script>
    $(function(){
        var labels = @Html.Raw(areaLabels.ToJson()) || [];
        var ctx = document.getElementById("chart-area");
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets:[
                @for (var i = 0; i < types.Length; i++) {
                    var valueType = valueTypes.FirstOrDefault(e => e.ID == types[i]);
                    if (valueType == null)
                    {
                        continue;
                    }
                    var data = new List<string>();
                    foreach (var areaId in areas.OrderBy(e => e.ID).Select(e=>e.ID))
                    {
                        var values = nodeValues.Where(e => e.TypeID == valueType.ID && e.AreaID == areaId);
                        data.Add(values.Select(e => e.RawValue).DefaultIfEmpty(0).Sum().ToString("f2").TrimEnd('0').TrimEnd('.'));
                    }
                    <text>
                        {
                            label: "@(valueType.Name)",
                            data:@(Html.Raw(data.ToJson())),
                            backgroundColor: getChartColor(@(i)),
                            borderWidth: 1
                        }
                  </text>
                    if (i < types.Length-1) {
                        @:,
                    }
                }
                ]
            }
        });
    });
</script>
