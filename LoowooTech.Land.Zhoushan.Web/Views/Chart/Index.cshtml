@{
    Form form = ViewBag.Form;
    ViewBag.Title = "统计图 - " + form.Name;
    NodeValueParameter parameter = ViewBag.Parameter;
    int[] years = ViewBag.Years;
}
<h2 class="page-header">
    @(ViewBag.Title)
</h2>
<div id="loading" class="alert alert-warning">
    正在计算，请稍等...
</div>
<form id="form-filter" action="/chart/" method="get" class="form-inline">
    <input type="hidden" name="formId" value="@(form.ID)" />
    <div class="input-group">
        <span class="input-group-addon">选择条件</span>
        <div class="input-group-btn">
            @Html.Action("NodeDropdown", "Chart", new { formId = form.ID, nodeId = parameter.NodeID })
            <select name="Year" class="form-control">
                @foreach (var year in years)
                {
                    <option value="@(year)" @(parameter.Year == year ? "selected" : null)>@(year)</option>
                }
            </select>
            <select name="Quarters" class="form-control">
                @foreach (Quarter val in Enum.GetValues(typeof(Quarter)))
                {
                    <option value="@((int)val)" @(val == parameter.Quarter ? "selected" : null)>@(val.GetDescription())</option>
                }
                <option value="1,2" @(string.Join(",", parameter.Quarters) == "1,2" ? "selected" : null)>上半年</option>
                <option value="1,2,3,4" @(string.Join(",", parameter.Quarters) == "1,2,3,4" ? "selected" : null)>全年</option>
            </select>
            @Html.Action("Dropdown", "Area", new { AreaID = parameter.AreaID })
            @Html.Partial("_RateTypeDropdown", parameter.RateType)
            <button type="submit" class="btn btn-primary"><i class="fa fa-bar-chart-o"></i> 统计</button>
        </div>
        &nbsp;<a class="btn btn-default" href="javascript:history.back()">
            <i class="fa fa-chevron-left"></i> 返回
        </a>
    </div>
</form>
<div id="panel-node">

</div>
<div id="panel-quarter">

</div>
<div id="panel-area">

</div>
<script>
    var colors = ["#FF6384", "#4BC0C0", "#FFCE56", "#E7E9ED", "#36A2EB", "#F38630", "#E0E4CC", "#69D2E7", "#F7464A", "#E2EAE9", "#D4CCC5", "#949FB1", "#4D5360"];
    function getChartColors(len) {
        if (len >= colors.length) {
            return colors;
        }
        return colors.slice(0, len);
    }
    function getChartColor(i) {
        if (i >= colors.length) {
            return colors[i % colors.length];
        }
        return colors[i];
    }

    $(function () {
        $("#form-filter").submit(function () {
            var data = $(this).serialize();
            var action = $(this).attr("action");
            if (action.indexOf('?') == -1) {
                action = action + "?";
            }
            var href = action + "&" + data;


            $("#loading").show();
            var nodeChartCompleted = false;
            var quarterChartCompleted = false;
            var areaChartCompleted = false;

            function hideLoading() {
                if (nodeChartCompleted && quarterChartCompleted && areaChartCompleted) {
                    $("#loading").hide();
                }
            }

            $("#panel-node").load("/chart/nodechart?" + data, function () {
                nodeChartCompleted = true;
                hideLoading();
            });

            var years = $("#ddl-years").val() || 3;
            $("#panel-quarter").load("/chart/quarterchart?formId=@(form.ID)&" + data, function () {
                quarterChartCompleted = true;
                hideLoading();
            });
            $("#panel-area").load("/chart/areachart?" + data, function () {
                areaChartCompleted = true;
                hideLoading();
            });
            return false;
        });

        setTimeout(function () {
            if ("@(parameter.NodeID)" == "0") {
                $("#form-filter").submit();
            }
        }, 1000);
    });
</script>
